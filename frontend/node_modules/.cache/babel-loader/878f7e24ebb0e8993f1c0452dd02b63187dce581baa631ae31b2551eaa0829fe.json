{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sujay\\\\OneDrive\\\\Desktop\\\\WEB-APPS\\\\vertex-mail-gen\\\\frontend\\\\src\\\\components\\\\CertificatePreview.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CertificatePreview = ({\n  templateFile,\n  previewName,\n  xCoord,\n  endXCoord,\n  // Add this prop\n  yCoord,\n  fontSize\n}) => {\n  _s();\n  const [previewUrl, setPreviewUrl] = useState(null);\n  useEffect(() => {\n    const generatePreview = async () => {\n      const formData = new FormData();\n      formData.append('name', previewName);\n      formData.append('xCoord', xCoord);\n      formData.append('endXCoord', endXCoord); // Include this in formData\n      formData.append('yCoord', yCoord);\n      formData.append('fontSize', fontSize);\n      formData.append('templateFile', templateFile);\n      try {\n        const response = await fetch('http://localhost:5000/api/preview', {\n          method: 'POST',\n          body: formData\n        });\n        if (response.ok) {\n          const blob = await response.blob();\n          setPreviewUrl(URL.createObjectURL(blob));\n        }\n      } catch (error) {\n        console.error('Preview generation failed:', error);\n      }\n    };\n    if (templateFile) {\n      generatePreview();\n    }\n  }, [templateFile, previewName, xCoord, endXCoord, yCoord, fontSize]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preview-image\",\n    children: previewUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: previewUrl,\n      alt: \"Certificate Preview\",\n      style: {\n        width: '100%',\n        height: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading preview...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(CertificatePreview, \"TnT8AlujWwUFhgyqPxmOTGY8XzY=\");\n_c = CertificatePreview;\nexport default CertificatePreview;\nvar _c;\n$RefreshReg$(_c, \"CertificatePreview\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CertificatePreview","templateFile","previewName","xCoord","endXCoord","yCoord","fontSize","_s","previewUrl","setPreviewUrl","generatePreview","formData","FormData","append","response","fetch","method","body","ok","blob","URL","createObjectURL","error","console","className","children","src","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sujay/OneDrive/Desktop/WEB-APPS/vertex-mail-gen/frontend/src/components/CertificatePreview.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst CertificatePreview = ({ \r\n  templateFile, \r\n  previewName, \r\n  xCoord, \r\n  endXCoord,  // Add this prop\r\n  yCoord, \r\n  fontSize \r\n}) => {\r\n  const [previewUrl, setPreviewUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const generatePreview = async () => {\r\n      const formData = new FormData();\r\n      formData.append('name', previewName);\r\n      formData.append('xCoord', xCoord);\r\n      formData.append('endXCoord', endXCoord);  // Include this in formData\r\n      formData.append('yCoord', yCoord);\r\n      formData.append('fontSize', fontSize);\r\n      formData.append('templateFile', templateFile);\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/preview', {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n        \r\n        if (response.ok) {\r\n          const blob = await response.blob();\r\n          setPreviewUrl(URL.createObjectURL(blob));\r\n        }\r\n      } catch (error) {\r\n        console.error('Preview generation failed:', error);\r\n      }\r\n    };\r\n\r\n    if (templateFile) {\r\n      generatePreview();\r\n    }\r\n  }, [templateFile, previewName, xCoord, endXCoord, yCoord, fontSize]);\r\n\r\n  return (\r\n    <div className=\"preview-image\">\r\n      {previewUrl ? (\r\n        <img \r\n          src={previewUrl} \r\n          alt=\"Certificate Preview\" \r\n          style={{ width: '100%', height: 'auto' }} \r\n        />\r\n      ) : (\r\n        <p>Loading preview...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CertificatePreview;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,kBAAkB,GAAGA,CAAC;EAC1BC,YAAY;EACZC,WAAW;EACXC,MAAM;EACNC,SAAS;EAAG;EACZC,MAAM;EACNC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,WAAW,CAAC;MACpCS,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEV,MAAM,CAAC;MACjCQ,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAET,SAAS,CAAC,CAAC,CAAE;MAC1CO,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAER,MAAM,CAAC;MACjCM,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEP,QAAQ,CAAC;MACrCK,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEZ,YAAY,CAAC;MAE7C,IAAI;QACF,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;UAChEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEN;QACR,CAAC,CAAC;QAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;UAClCV,aAAa,CAACW,GAAG,CAACC,eAAe,CAACF,IAAI,CAAC,CAAC;QAC1C;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAED,IAAIrB,YAAY,EAAE;MAChBS,eAAe,CAAC,CAAC;IACnB;EACF,CAAC,EAAE,CAACT,YAAY,EAAEC,WAAW,EAAEC,MAAM,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,CAAC,CAAC;EAEpE,oBACEP,OAAA;IAAKyB,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC3BjB,UAAU,gBACTT,OAAA;MACE2B,GAAG,EAAElB,UAAW;MAChBmB,GAAG,EAAC,qBAAqB;MACzBC,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,gBAEFnC,OAAA;MAAA0B,QAAA,EAAG;IAAkB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACzB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CArDIP,kBAAkB;AAAAmC,EAAA,GAAlBnC,kBAAkB;AAuDxB,eAAeA,kBAAkB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}