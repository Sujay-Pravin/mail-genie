{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sujay\\\\OneDrive\\\\Desktop\\\\vertex-mail-gen\\\\frontend\\\\src\\\\components\\\\CertificatePreview.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CertificatePreview = ({\n  templateFile,\n  textFields,\n  showGuides = true,\n  quality = \"high\",\n  previewScale = 1\n}) => {\n  _s();\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [retryCount, setRetryCount] = useState(0);\n  const generatePreview = useCallback(async () => {\n    if (!templateFile) {\n      setPreviewUrl(null);\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const formData = new FormData();\n      formData.append('templateFile', templateFile);\n      formData.append('textFields', JSON.stringify(textFields));\n      formData.append('showGuides', String(showGuides));\n      formData.append('quality', quality);\n      formData.append('scale', String(previewScale));\n      const response = await fetch('http://localhost:5000/api/previewCertificate', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to generate preview');\n      }\n      const blob = await response.blob();\n      const url = URL.createObjectURL(blob);\n\n      // Cleanup old preview URL before setting new one\n      if (previewUrl) {\n        URL.revokeObjectURL(previewUrl);\n      }\n      setPreviewUrl(url);\n      setRetryCount(0); // Reset retry count on success\n    } catch (err) {\n      console.error('Preview error:', err);\n      if (retryCount < 3) {\n        // Retry up to 3 times\n        setRetryCount(prev => prev + 1);\n        setTimeout(() => generatePreview(), 1000); // Retry after 1 second\n      } else {\n        setError('Failed to generate preview');\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [templateFile, textFields, showGuides, quality, previewScale, retryCount]);\n  useEffect(() => {\n    generatePreview();\n    return () => {\n      if (previewUrl) {\n        URL.revokeObjectURL(previewUrl);\n      }\n    };\n  }, [generatePreview]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generating preview...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generatePreview,\n        className: \"retry-button\",\n        children: \"Retry Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n  if (!templateFile) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-placeholder\",\n      children: \"Upload a template to see preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"certificate-preview\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: previewUrl,\n      alt: \"Certificate Preview\",\n      style: {\n        maxWidth: '100%',\n        height: 'auto',\n        transform: `scale(${previewScale})`\n      },\n      onError: () => {\n        setError('Failed to load preview');\n        if (retryCount < 3) {\n          generatePreview();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(CertificatePreview, \"/x8i7w5ePpCkaYLHcGtOlUKm7Kw=\");\n_c = CertificatePreview;\nexport default CertificatePreview;\nvar _c;\n$RefreshReg$(_c, \"CertificatePreview\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","CertificatePreview","templateFile","textFields","showGuides","quality","previewScale","_s","previewUrl","setPreviewUrl","loading","setLoading","error","setError","retryCount","setRetryCount","generatePreview","formData","FormData","append","JSON","stringify","String","response","fetch","method","body","ok","Error","blob","url","URL","createObjectURL","revokeObjectURL","err","console","prev","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","style","maxWidth","height","transform","onError","_c","$RefreshReg$"],"sources":["C:/Users/sujay/OneDrive/Desktop/vertex-mail-gen/frontend/src/components/CertificatePreview.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nconst CertificatePreview = ({ \r\n  templateFile, \r\n  textFields, \r\n  showGuides = true,\r\n  quality = \"high\",\r\n  previewScale = 1\r\n}) => {\r\n  const [previewUrl, setPreviewUrl] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [retryCount, setRetryCount] = useState(0);\r\n\r\n  const generatePreview = useCallback(async () => {\r\n    if (!templateFile) {\r\n      setPreviewUrl(null);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('templateFile', templateFile);\r\n      formData.append('textFields', JSON.stringify(textFields));\r\n      formData.append('showGuides', String(showGuides));\r\n      formData.append('quality', quality);\r\n      formData.append('scale', String(previewScale));\r\n\r\n      const response = await fetch('http://localhost:5000/api/previewCertificate', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to generate preview');\r\n      }\r\n\r\n      const blob = await response.blob();\r\n      const url = URL.createObjectURL(blob);\r\n      \r\n      // Cleanup old preview URL before setting new one\r\n      if (previewUrl) {\r\n        URL.revokeObjectURL(previewUrl);\r\n      }\r\n      \r\n      setPreviewUrl(url);\r\n      setRetryCount(0); // Reset retry count on success\r\n    } catch (err) {\r\n      console.error('Preview error:', err);\r\n      if (retryCount < 3) { // Retry up to 3 times\r\n        setRetryCount(prev => prev + 1);\r\n        setTimeout(() => generatePreview(), 1000); // Retry after 1 second\r\n      } else {\r\n        setError('Failed to generate preview');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [templateFile, textFields, showGuides, quality, previewScale, retryCount]);\r\n\r\n  useEffect(() => {\r\n    generatePreview();\r\n    return () => {\r\n      if (previewUrl) {\r\n        URL.revokeObjectURL(previewUrl);\r\n      }\r\n    };\r\n  }, [generatePreview]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"preview-loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Generating preview...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"preview-error\">\r\n        <p>{error}</p>\r\n        <button onClick={generatePreview} className=\"retry-button\">\r\n          Retry Preview\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!templateFile) {\r\n    return (\r\n      <div className=\"preview-placeholder\">\r\n        Upload a template to see preview\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"certificate-preview\">\r\n      <img \r\n        src={previewUrl} \r\n        alt=\"Certificate Preview\" \r\n        style={{ \r\n          maxWidth: '100%', \r\n          height: 'auto',\r\n          transform: `scale(${previewScale})`\r\n        }}\r\n        onError={() => {\r\n          setError('Failed to load preview');\r\n          if (retryCount < 3) {\r\n            generatePreview();\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CertificatePreview;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}