{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sujay\\\\OneDrive\\\\Desktop\\\\vertex-mail-gen\\\\frontend\\\\src\\\\components\\\\CertificatePreview.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './CertificatePreview.css'; // We'll create this file next\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CertificatePreview = ({\n  templateFile,\n  textFields,\n  fontSize,\n  font,\n  textColor\n}) => {\n  _s();\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const generatePreview = async () => {\n      if (!templateFile) return;\n      setLoading(true);\n      setError(null);\n      try {\n        const formData = new FormData();\n        formData.append('templateFile', templateFile);\n        formData.append('textFields', JSON.stringify(textFields));\n        formData.append('fontSize', fontSize);\n        formData.append('font', font);\n        formData.append('textColor', textColor);\n        const response = await fetch('http://localhost:5000/api/previewCertificate', {\n          method: 'POST',\n          body: formData\n        });\n        if (!response.ok) {\n          throw new Error('Failed to generate preview');\n        }\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        setPreviewUrl(url);\n      } catch (error) {\n        console.error('Preview generation failed:', error);\n        setError('Failed to generate preview. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    generatePreview();\n    return () => {\n      if (previewUrl) {\n        URL.revokeObjectURL(previewUrl);\n      }\n    };\n  }, [templateFile, textFields, fontSize, font, textColor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"certificate-preview\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generating preview...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-error\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), !loading && !error && !previewUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-placeholder\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload a template to see preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), !loading && !error && previewUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-image-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: previewUrl,\n        alt: \"Certificate Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-overlay\",\n        children: textFields && Object.entries(textFields).map(([key, field]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-text\",\n          style: {\n            left: `${field.x}%`,\n            top: `${field.y}%`,\n            color: textColor,\n            fontFamily: font,\n            fontSize: `${fontSize}px`\n          },\n          children: field.value\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(CertificatePreview, \"LJ0HuIsUhscdbUXJXcQVyE/7e3o=\");\n_c = CertificatePreview;\nexport default CertificatePreview;\nvar _c;\n$RefreshReg$(_c, \"CertificatePreview\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CertificatePreview","templateFile","textFields","fontSize","font","textColor","_s","previewUrl","setPreviewUrl","loading","setLoading","error","setError","generatePreview","formData","FormData","append","JSON","stringify","response","fetch","method","body","ok","Error","blob","url","URL","createObjectURL","console","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","Object","entries","map","key","field","style","left","x","top","y","color","fontFamily","value","_c","$RefreshReg$"],"sources":["C:/Users/sujay/OneDrive/Desktop/vertex-mail-gen/frontend/src/components/CertificatePreview.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './CertificatePreview.css';  // We'll create this file next\r\n\r\nconst CertificatePreview = ({ \r\n    templateFile,\r\n    textFields,\r\n    fontSize,\r\n    font,\r\n    textColor\r\n}) => {\r\n    const [previewUrl, setPreviewUrl] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const generatePreview = async () => {\r\n            if (!templateFile) return;\r\n            \r\n            setLoading(true);\r\n            setError(null);\r\n\r\n            try {\r\n                const formData = new FormData();\r\n                formData.append('templateFile', templateFile);\r\n                formData.append('textFields', JSON.stringify(textFields));\r\n                formData.append('fontSize', fontSize);\r\n                formData.append('font', font);\r\n                formData.append('textColor', textColor);\r\n\r\n                const response = await fetch('http://localhost:5000/api/previewCertificate', {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to generate preview');\r\n                }\r\n\r\n                const blob = await response.blob();\r\n                const url = URL.createObjectURL(blob);\r\n                setPreviewUrl(url);\r\n\r\n            } catch (error) {\r\n                console.error('Preview generation failed:', error);\r\n                setError('Failed to generate preview. Please try again.');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        generatePreview();\r\n\r\n        return () => {\r\n            if (previewUrl) {\r\n                URL.revokeObjectURL(previewUrl);\r\n            }\r\n        };\r\n    }, [templateFile, textFields, fontSize, font, textColor]);\r\n\r\n    return (\r\n        <div className=\"certificate-preview\">\r\n            {loading && (\r\n                <div className=\"preview-loading\">\r\n                    <p>Generating preview...</p>\r\n                </div>\r\n            )}\r\n            \r\n            {error && (\r\n                <div className=\"preview-error\">\r\n                    <p>{error}</p>\r\n                </div>\r\n            )}\r\n            \r\n            {!loading && !error && !previewUrl && (\r\n                <div className=\"preview-placeholder\">\r\n                    <p>Upload a template to see preview</p>\r\n                </div>\r\n            )}\r\n            \r\n            {!loading && !error && previewUrl && (\r\n                <div className=\"preview-image-container\">\r\n                    <img src={previewUrl} alt=\"Certificate Preview\" />\r\n                    <div className=\"text-overlay\">\r\n                        {textFields && Object.entries(textFields).map(([key, field]) => (\r\n                            <div\r\n                                key={key}\r\n                                className=\"preview-text\"\r\n                                style={{\r\n                                    left: `${field.x}%`,\r\n                                    top: `${field.y}%`,\r\n                                    color: textColor,\r\n                                    fontFamily: font,\r\n                                    fontSize: `${fontSize}px`,\r\n                                }}\r\n                            >\r\n                                {field.value}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CertificatePreview;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}