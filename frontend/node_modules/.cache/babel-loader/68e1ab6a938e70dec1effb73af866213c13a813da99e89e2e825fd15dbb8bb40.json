{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sujay\\\\OneDrive\\\\Desktop\\\\vertex-mail-gen\\\\frontend\\\\src\\\\components\\\\CertificatePreview.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CertificatePreview = ({\n  templateFile,\n  previewName,\n  xCoord,\n  endXCoord,\n  yCoord,\n  fontSize,\n  font,\n  textColor\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (!templateFile) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const img = new Image();\n      img.src = e.target.result;\n      img.onload = () => {\n        const canvas = canvasRef.current;\n        canvas.width = img.width;\n        canvas.height = img.height;\n        const ctx = canvas.getContext('2d');\n\n        // Draw image\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, 0, 0);\n\n        // Text settings\n        ctx.font = `${fontSize * 15}px \"${font}\"`;\n        ctx.fillStyle = textColor;\n        const text = previewName.trim();\n        const metrics = ctx.measureText(text);\n        const textWidth = metrics.width;\n\n        // Calculate center position\n        const center_x = xCoord + (endXCoord - xCoord - textWidth) / 2;\n\n        // Draw guidelines for visualization\n        ctx.fillStyle = 'rgba(0, 200, 0, 0.1)';\n        ctx.fillRect(xCoord, yCoord - fontSize * 12, endXCoord - xCoord, fontSize * 15);\n\n        // Draw center line\n        ctx.strokeStyle = 'rgba(0, 200, 0, 0.5)';\n        ctx.setLineDash([5, 5]);\n        ctx.beginPath();\n        ctx.moveTo(xCoord + (endXCoord - xCoord) / 2, yCoord - fontSize * 12);\n        ctx.lineTo(xCoord + (endXCoord - xCoord) / 2, yCoord + fontSize * 3);\n        ctx.stroke();\n\n        // Draw text\n        ctx.fillStyle = 'black';\n        ctx.setLineDash([]);\n        ctx.fillText(text, center_x, yCoord);\n      };\n    };\n    reader.readAsDataURL(templateFile);\n  }, [templateFile, previewName, xCoord, endXCoord, yCoord, fontSize, font, textColor]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n};\n_s(CertificatePreview, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = CertificatePreview;\nexport default CertificatePreview;\nvar _c;\n$RefreshReg$(_c, \"CertificatePreview\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","CertificatePreview","templateFile","previewName","xCoord","endXCoord","yCoord","fontSize","font","textColor","_s","canvasRef","reader","FileReader","onload","e","img","Image","src","target","result","canvas","current","width","height","ctx","getContext","clearRect","drawImage","fillStyle","text","trim","metrics","measureText","textWidth","center_x","fillRect","strokeStyle","setLineDash","beginPath","moveTo","lineTo","stroke","fillText","readAsDataURL","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sujay/OneDrive/Desktop/vertex-mail-gen/frontend/src/components/CertificatePreview.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\n\r\nconst CertificatePreview = ({ templateFile, previewName, xCoord, endXCoord, yCoord, fontSize, font, textColor }) => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!templateFile) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const img = new Image();\r\n      img.src = e.target.result;\r\n      img.onload = () => {\r\n        const canvas = canvasRef.current;\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        const ctx = canvas.getContext('2d');\r\n        \r\n        // Draw image\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.drawImage(img, 0, 0);\r\n        \r\n        // Text settings\r\n        ctx.font = `${fontSize * 15}px \"${font}\"`;\r\n        ctx.fillStyle = textColor;\r\n        const text = previewName.trim();\r\n        const metrics = ctx.measureText(text);\r\n        const textWidth = metrics.width;\r\n        \r\n        // Calculate center position\r\n        const center_x = xCoord + ((endXCoord - xCoord) - textWidth) / 2;\r\n        \r\n        // Draw guidelines for visualization\r\n        ctx.fillStyle = 'rgba(0, 200, 0, 0.1)';\r\n        ctx.fillRect(xCoord, yCoord - fontSize * 12, endXCoord - xCoord, fontSize * 15);\r\n        \r\n        // Draw center line\r\n        ctx.strokeStyle = 'rgba(0, 200, 0, 0.5)';\r\n        ctx.setLineDash([5, 5]);\r\n        ctx.beginPath();\r\n        ctx.moveTo(xCoord + (endXCoord - xCoord) / 2, yCoord - fontSize * 12);\r\n        ctx.lineTo(xCoord + (endXCoord - xCoord) / 2, yCoord + fontSize * 3);\r\n        ctx.stroke();\r\n        \r\n        // Draw text\r\n        ctx.fillStyle = 'black';\r\n        ctx.setLineDash([]);\r\n        ctx.fillText(text, center_x, yCoord);\r\n      };\r\n    };\r\n    reader.readAsDataURL(templateFile);\r\n  }, [templateFile, previewName, xCoord, endXCoord, yCoord, fontSize, font, textColor]);\r\n\r\n  return <canvas ref={canvasRef} />;\r\n};\r\n\r\nexport default CertificatePreview;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,YAAY;EAAEC,WAAW;EAAEC,MAAM;EAAEC,SAAS;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAClH,MAAMC,SAAS,GAAGd,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACd,IAAI,CAACI,YAAY,EAAE;IAEnB,MAAMU,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;MACrB,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,GAAG,GAAGH,CAAC,CAACI,MAAM,CAACC,MAAM;MACzBJ,GAAG,CAACF,MAAM,GAAG,MAAM;QACjB,MAAMO,MAAM,GAAGV,SAAS,CAACW,OAAO;QAChCD,MAAM,CAACE,KAAK,GAAGP,GAAG,CAACO,KAAK;QACxBF,MAAM,CAACG,MAAM,GAAGR,GAAG,CAACQ,MAAM;QAC1B,MAAMC,GAAG,GAAGJ,MAAM,CAACK,UAAU,CAAC,IAAI,CAAC;;QAEnC;QACAD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEN,MAAM,CAACE,KAAK,EAAEF,MAAM,CAACG,MAAM,CAAC;QAChDC,GAAG,CAACG,SAAS,CAACZ,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;;QAExB;QACAS,GAAG,CAACjB,IAAI,GAAG,GAAGD,QAAQ,GAAG,EAAE,OAAOC,IAAI,GAAG;QACzCiB,GAAG,CAACI,SAAS,GAAGpB,SAAS;QACzB,MAAMqB,IAAI,GAAG3B,WAAW,CAAC4B,IAAI,CAAC,CAAC;QAC/B,MAAMC,OAAO,GAAGP,GAAG,CAACQ,WAAW,CAACH,IAAI,CAAC;QACrC,MAAMI,SAAS,GAAGF,OAAO,CAACT,KAAK;;QAE/B;QACA,MAAMY,QAAQ,GAAG/B,MAAM,GAAG,CAAEC,SAAS,GAAGD,MAAM,GAAI8B,SAAS,IAAI,CAAC;;QAEhE;QACAT,GAAG,CAACI,SAAS,GAAG,sBAAsB;QACtCJ,GAAG,CAACW,QAAQ,CAAChC,MAAM,EAAEE,MAAM,GAAGC,QAAQ,GAAG,EAAE,EAAEF,SAAS,GAAGD,MAAM,EAAEG,QAAQ,GAAG,EAAE,CAAC;;QAE/E;QACAkB,GAAG,CAACY,WAAW,GAAG,sBAAsB;QACxCZ,GAAG,CAACa,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACvBb,GAAG,CAACc,SAAS,CAAC,CAAC;QACfd,GAAG,CAACe,MAAM,CAACpC,MAAM,GAAG,CAACC,SAAS,GAAGD,MAAM,IAAI,CAAC,EAAEE,MAAM,GAAGC,QAAQ,GAAG,EAAE,CAAC;QACrEkB,GAAG,CAACgB,MAAM,CAACrC,MAAM,GAAG,CAACC,SAAS,GAAGD,MAAM,IAAI,CAAC,EAAEE,MAAM,GAAGC,QAAQ,GAAG,CAAC,CAAC;QACpEkB,GAAG,CAACiB,MAAM,CAAC,CAAC;;QAEZ;QACAjB,GAAG,CAACI,SAAS,GAAG,OAAO;QACvBJ,GAAG,CAACa,WAAW,CAAC,EAAE,CAAC;QACnBb,GAAG,CAACkB,QAAQ,CAACb,IAAI,EAAEK,QAAQ,EAAE7B,MAAM,CAAC;MACtC,CAAC;IACH,CAAC;IACDM,MAAM,CAACgC,aAAa,CAAC1C,YAAY,CAAC;EACpC,CAAC,EAAE,CAACA,YAAY,EAAEC,WAAW,EAAEC,MAAM,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,SAAS,CAAC,CAAC;EAErF,oBAAOT,OAAA;IAAQ6C,GAAG,EAAElC;EAAU;IAAAmC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnC,CAAC;AAACvC,EAAA,CApDIT,kBAAkB;AAAAiD,EAAA,GAAlBjD,kBAAkB;AAsDxB,eAAeA,kBAAkB;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}