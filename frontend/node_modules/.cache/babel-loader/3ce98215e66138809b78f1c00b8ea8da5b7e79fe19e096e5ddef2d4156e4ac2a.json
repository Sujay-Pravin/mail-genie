{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sujay\\\\OneDrive\\\\Desktop\\\\vertex-mail-gen\\\\frontend\\\\src\\\\components\\\\CertificatePreview.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './CertificatePreview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CertificatePreview = ({\n  templateFile,\n  textFields,\n  fontSize,\n  font,\n  textColor\n}) => {\n  _s();\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const generatePreview = async () => {\n      if (!templateFile) return;\n      setLoading(true);\n      setError(null);\n      try {\n        const formData = new FormData();\n        formData.append('templateFile', templateFile);\n        formData.append('textFields', JSON.stringify(textFields));\n        formData.append('fontSize', fontSize || '14');\n        formData.append('font', font || 'Arial');\n        formData.append('textColor', textColor || '#000000');\n        const response = await fetch('http://localhost:5000/api/previewCertificate', {\n          method: 'POST',\n          body: formData\n        });\n        if (!response.ok) throw new Error('Failed to generate preview');\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        setPreviewUrl(url);\n      } catch (error) {\n        console.error('Preview generation failed:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    generatePreview();\n    return () => {\n      if (previewUrl) URL.revokeObjectURL(previewUrl);\n    };\n  }, [templateFile, textFields, fontSize, font, textColor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"certificate-preview-wrapper\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-loading\",\n      children: \"Generating preview...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"certificate-preview\",\n      children: !previewUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-placeholder\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload a template to see preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewUrl,\n          alt: \"Certificate Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(CertificatePreview, \"LJ0HuIsUhscdbUXJXcQVyE/7e3o=\");\n_c = CertificatePreview;\nexport default CertificatePreview;\nvar _c;\n$RefreshReg$(_c, \"CertificatePreview\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CertificatePreview","templateFile","textFields","fontSize","font","textColor","_s","previewUrl","setPreviewUrl","loading","setLoading","error","setError","generatePreview","formData","FormData","append","JSON","stringify","response","fetch","method","body","ok","Error","blob","url","URL","createObjectURL","console","message","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/sujay/OneDrive/Desktop/vertex-mail-gen/frontend/src/components/CertificatePreview.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './CertificatePreview.css';\r\n\r\nconst CertificatePreview = ({ templateFile, textFields, fontSize, font, textColor }) => {\r\n    const [previewUrl, setPreviewUrl] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const generatePreview = async () => {\r\n            if (!templateFile) return;\r\n            \r\n            setLoading(true);\r\n            setError(null);\r\n\r\n            try {\r\n                const formData = new FormData();\r\n                formData.append('templateFile', templateFile);\r\n                formData.append('textFields', JSON.stringify(textFields));\r\n                formData.append('fontSize', fontSize || '14');\r\n                formData.append('font', font || 'Arial');\r\n                formData.append('textColor', textColor || '#000000');\r\n\r\n                const response = await fetch('http://localhost:5000/api/previewCertificate', {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                });\r\n\r\n                if (!response.ok) throw new Error('Failed to generate preview');\r\n\r\n                const blob = await response.blob();\r\n                const url = URL.createObjectURL(blob);\r\n                setPreviewUrl(url);\r\n            } catch (error) {\r\n                console.error('Preview generation failed:', error);\r\n                setError(error.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        generatePreview();\r\n\r\n        return () => {\r\n            if (previewUrl) URL.revokeObjectURL(previewUrl);\r\n        };\r\n    }, [templateFile, textFields, fontSize, font, textColor]);\r\n\r\n    return (\r\n        <div className=\"certificate-preview-wrapper\">\r\n            {loading && <div className=\"preview-loading\">Generating preview...</div>}\r\n            {error && <div className=\"preview-error\">{error}</div>}\r\n            {!loading && !error && (\r\n                <div className=\"certificate-preview\">\r\n                    {!previewUrl ? (\r\n                        <div className=\"preview-placeholder\">\r\n                            <p>Upload a template to see preview</p>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"preview-image-container\">\r\n                            <img src={previewUrl} alt=\"Certificate Preview\" />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CertificatePreview;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}