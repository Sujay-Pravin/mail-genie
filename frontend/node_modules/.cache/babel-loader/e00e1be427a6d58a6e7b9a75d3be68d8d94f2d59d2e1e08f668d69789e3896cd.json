{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sujay\\\\OneDrive\\\\Desktop\\\\WEB-APPS\\\\vertex-mail-gen\\\\frontend\\\\src\\\\components\\\\CertificatePreview.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CertificatePreview = ({\n  templateFile,\n  previewName,\n  xCoord,\n  endXCoord,\n  yCoord,\n  fontSize\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (!templateFile) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const img = new Image();\n      img.src = e.target.result;\n      img.onload = () => {\n        const canvas = canvasRef.current;\n        canvas.width = img.width;\n        canvas.height = img.height;\n        const ctx = canvas.getContext('2d');\n\n        // Draw background\n        ctx.drawImage(img, 0, 0);\n\n        // Text settings\n        const text = previewName.trim();\n        ctx.font = `${fontSize * 10}px Arial`;\n        const textMetrics = ctx.measureText(text);\n        const textWidth = textMetrics.width;\n        const textHeight = fontSize * 15;\n\n        // Calculate center position\n        const centerX = xCoord + (endXCoord - xCoord - textWidth) / 2;\n        const x = Math.max(xCoord, Math.min(centerX, endXCoord - textWidth));\n\n        // Draw guide box and centerline (preview only)\n        ctx.save();\n        ctx.fillStyle = 'rgba(0, 255, 0, 0.1)';\n        ctx.strokeStyle = 'rgba(0, 255, 0, 0.5)';\n        ctx.lineWidth = 2;\n\n        // Guide box\n        ctx.fillRect(xCoord, yCoord - textHeight, endXCoord - xCoord, textHeight + 20);\n        ctx.strokeRect(xCoord, yCoord - textHeight, endXCoord - xCoord, textHeight + 20);\n\n        // Center line\n        ctx.beginPath();\n        ctx.setLineDash([5, 5]);\n        ctx.moveTo((xCoord + endXCoord) / 2, yCoord - textHeight - 10);\n        ctx.lineTo((xCoord + endXCoord) / 2, yCoord + 20);\n        ctx.stroke();\n        ctx.restore();\n\n        // Draw text\n        ctx.fillStyle = 'black';\n        ctx.fillText(text, x, yCoord);\n      };\n    };\n    reader.readAsDataURL(templateFile);\n  }, [templateFile, previewName, xCoord, endXCoord, yCoord, fontSize]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n_s(CertificatePreview, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = CertificatePreview;\nexport default CertificatePreview;\nvar _c;\n$RefreshReg$(_c, \"CertificatePreview\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","CertificatePreview","templateFile","previewName","xCoord","endXCoord","yCoord","fontSize","_s","canvasRef","reader","FileReader","onload","e","img","Image","src","target","result","canvas","current","width","height","ctx","getContext","drawImage","text","trim","font","textMetrics","measureText","textWidth","textHeight","centerX","x","Math","max","min","save","fillStyle","strokeStyle","lineWidth","fillRect","strokeRect","beginPath","setLineDash","moveTo","lineTo","stroke","restore","fillText","readAsDataURL","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sujay/OneDrive/Desktop/WEB-APPS/vertex-mail-gen/frontend/src/components/CertificatePreview.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\n\r\nconst CertificatePreview = ({ templateFile, previewName, xCoord, endXCoord, yCoord, fontSize }) => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!templateFile) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const img = new Image();\r\n      img.src = e.target.result;\r\n      img.onload = () => {\r\n        const canvas = canvasRef.current;\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        // Draw background\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        // Text settings\r\n        const text = previewName.trim();\r\n        ctx.font = `${fontSize * 10}px Arial`;\r\n        const textMetrics = ctx.measureText(text);\r\n        const textWidth = textMetrics.width;\r\n        const textHeight = fontSize * 15;\r\n\r\n        // Calculate center position\r\n        const centerX = xCoord + ((endXCoord - xCoord) - textWidth) / 2;\r\n        const x = Math.max(xCoord, Math.min(centerX, endXCoord - textWidth));\r\n\r\n        // Draw guide box and centerline (preview only)\r\n        ctx.save();\r\n        ctx.fillStyle = 'rgba(0, 255, 0, 0.1)';\r\n        ctx.strokeStyle = 'rgba(0, 255, 0, 0.5)';\r\n        ctx.lineWidth = 2;\r\n\r\n        // Guide box\r\n        ctx.fillRect(xCoord, yCoord - textHeight, endXCoord - xCoord, textHeight + 20);\r\n        ctx.strokeRect(xCoord, yCoord - textHeight, endXCoord - xCoord, textHeight + 20);\r\n\r\n        // Center line\r\n        ctx.beginPath();\r\n        ctx.setLineDash([5, 5]);\r\n        ctx.moveTo((xCoord + endXCoord) / 2, yCoord - textHeight - 10);\r\n        ctx.lineTo((xCoord + endXCoord) / 2, yCoord + 20);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n\r\n        // Draw text\r\n        ctx.fillStyle = 'black';\r\n        ctx.fillText(text, x, yCoord);\r\n      };\r\n    };\r\n    reader.readAsDataURL(templateFile);\r\n  }, [templateFile, previewName, xCoord, endXCoord, yCoord, fontSize]);\r\n\r\n  return <canvas ref={canvasRef} />;\r\n};\r\n\r\nexport default CertificatePreview;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}