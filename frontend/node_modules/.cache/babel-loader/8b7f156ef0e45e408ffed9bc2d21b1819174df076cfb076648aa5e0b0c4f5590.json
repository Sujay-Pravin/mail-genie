{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sujay\\\\OneDrive\\\\Desktop\\\\vertex-mail-gen\\\\frontend\\\\src\\\\components\\\\CertificatePreview.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CertificatePreview = ({\n  templateFile,\n  textFields\n}) => {\n  _s();\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const generatePreview = async () => {\n      if (!templateFile) {\n        setPreviewUrl(null);\n        return;\n      }\n      setLoading(true);\n      setError(null);\n      try {\n        const formData = new FormData();\n        formData.append('templateFile', templateFile);\n        formData.append('textFields', JSON.stringify(textFields));\n        const response = await fetch('http://localhost:5000/api/previewCertificate', {\n          method: 'POST',\n          body: formData\n        });\n        if (!response.ok) {\n          throw new Error('Failed to generate preview');\n        }\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        setPreviewUrl(url);\n      } catch (err) {\n        setError('Failed to generate preview');\n        console.error('Preview error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    generatePreview();\n\n    // Cleanup function to revoke object URL\n    return () => {\n      if (previewUrl) {\n        URL.revokeObjectURL(previewUrl);\n      }\n    };\n  }, [templateFile, textFields]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-loading\",\n      children: \"Generating preview...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  if (!templateFile) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-placeholder\",\n      children: \"Upload a template to see preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"certificate-preview\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: previewUrl,\n      alt: \"Certificate Preview\",\n      style: {\n        maxWidth: '100%',\n        height: 'auto'\n      },\n      onError: () => setError('Failed to load preview')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(CertificatePreview, \"LJ0HuIsUhscdbUXJXcQVyE/7e3o=\");\n_c = CertificatePreview;\nexport default CertificatePreview;\nvar _c;\n$RefreshReg$(_c, \"CertificatePreview\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CertificatePreview","templateFile","textFields","_s","previewUrl","setPreviewUrl","loading","setLoading","error","setError","generatePreview","formData","FormData","append","JSON","stringify","response","fetch","method","body","ok","Error","blob","url","URL","createObjectURL","err","console","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","maxWidth","height","onError","_c","$RefreshReg$"],"sources":["C:/Users/sujay/OneDrive/Desktop/vertex-mail-gen/frontend/src/components/CertificatePreview.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CertificatePreview = ({ templateFile, textFields }) => {\r\n  const [previewUrl, setPreviewUrl] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const generatePreview = async () => {\r\n      if (!templateFile) {\r\n        setPreviewUrl(null);\r\n        return;\r\n      }\r\n\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('templateFile', templateFile);\r\n        formData.append('textFields', JSON.stringify(textFields));\r\n\r\n        const response = await fetch('http://localhost:5000/api/previewCertificate', {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to generate preview');\r\n        }\r\n\r\n        const blob = await response.blob();\r\n        const url = URL.createObjectURL(blob);\r\n        setPreviewUrl(url);\r\n      } catch (err) {\r\n        setError('Failed to generate preview');\r\n        console.error('Preview error:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    generatePreview();\r\n\r\n    // Cleanup function to revoke object URL\r\n    return () => {\r\n      if (previewUrl) {\r\n        URL.revokeObjectURL(previewUrl);\r\n      }\r\n    };\r\n  }, [templateFile, textFields]);\r\n\r\n  if (loading) {\r\n    return <div className=\"preview-loading\">Generating preview...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"preview-error\">{error}</div>;\r\n  }\r\n\r\n  if (!templateFile) {\r\n    return <div className=\"preview-placeholder\">Upload a template to see preview</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"certificate-preview\">\r\n      <img \r\n        src={previewUrl} \r\n        alt=\"Certificate Preview\" \r\n        style={{ maxWidth: '100%', height: 'auto' }}\r\n        onError={() => setError('Failed to load preview')}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CertificatePreview;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}