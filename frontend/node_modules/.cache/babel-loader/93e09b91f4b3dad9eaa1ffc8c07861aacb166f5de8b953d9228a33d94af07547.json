{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sujay\\\\OneDrive\\\\Desktop\\\\vertex-mail-gen\\\\frontend\\\\src\\\\components\\\\CertificatePreview.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CertificatePreview = ({\n  templateFile,\n  textFields,\n  fontSize,\n  font,\n  textColor\n}) => {\n  _s();\n  const [previewUrl, setPreviewUrl] = useState(null);\n  useEffect(() => {\n    const generatePreview = async () => {\n      if (!templateFile) return;\n      try {\n        const formData = new FormData();\n        formData.append('templateFile', templateFile);\n        formData.append('textFields', JSON.stringify(textFields));\n        const response = await fetch('http://localhost:5000/api/previewCertificate', {\n          method: 'POST',\n          body: formData\n        });\n        if (!response.ok) {\n          throw new Error('Failed to generate preview');\n        }\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        setPreviewUrl(url);\n      } catch (error) {\n        console.error('Preview generation failed:', error);\n      }\n    };\n    generatePreview();\n\n    // Cleanup function to prevent memory leaks\n    return () => {\n      if (previewUrl) {\n        URL.revokeObjectURL(previewUrl);\n      }\n    };\n  }, [templateFile, textFields, fontSize, font, textColor]); // Removed previewUrl from dependencies\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preview-container\",\n    children: !previewUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-placeholder\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload a template to see preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: previewUrl,\n      alt: \"Certificate Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(CertificatePreview, \"TnT8AlujWwUFhgyqPxmOTGY8XzY=\");\n_c = CertificatePreview;\nexport default CertificatePreview;\nvar _c;\n$RefreshReg$(_c, \"CertificatePreview\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CertificatePreview","templateFile","textFields","fontSize","font","textColor","_s","previewUrl","setPreviewUrl","generatePreview","formData","FormData","append","JSON","stringify","response","fetch","method","body","ok","Error","blob","url","URL","createObjectURL","error","console","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/sujay/OneDrive/Desktop/vertex-mail-gen/frontend/src/components/CertificatePreview.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CertificatePreview = ({ \r\n    templateFile,\r\n    textFields,\r\n    fontSize,\r\n    font,\r\n    textColor\r\n}) => {\r\n    const [previewUrl, setPreviewUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const generatePreview = async () => {\r\n            if (!templateFile) return;\r\n\r\n            try {\r\n                const formData = new FormData();\r\n                formData.append('templateFile', templateFile);\r\n                formData.append('textFields', JSON.stringify(textFields));\r\n\r\n                const response = await fetch('http://localhost:5000/api/previewCertificate', {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to generate preview');\r\n                }\r\n\r\n                const blob = await response.blob();\r\n                const url = URL.createObjectURL(blob);\r\n                setPreviewUrl(url);\r\n\r\n            } catch (error) {\r\n                console.error('Preview generation failed:', error);\r\n            }\r\n        };\r\n\r\n        generatePreview();\r\n\r\n        // Cleanup function to prevent memory leaks\r\n        return () => {\r\n            if (previewUrl) {\r\n                URL.revokeObjectURL(previewUrl);\r\n            }\r\n        };\r\n    }, [templateFile, textFields, fontSize, font, textColor]); // Removed previewUrl from dependencies\r\n\r\n    return (\r\n        <div className=\"preview-container\">\r\n            {!previewUrl ? (\r\n                <div className=\"preview-placeholder\">\r\n                    <p>Upload a template to see preview</p>\r\n                </div>\r\n            ) : (\r\n                <img src={previewUrl} alt=\"Certificate Preview\" />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CertificatePreview;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,kBAAkB,GAAGA,CAAC;EACxBC,YAAY;EACZC,UAAU;EACVC,QAAQ;EACRC,IAAI;EACJC;AACJ,CAAC,KAAK;EAAAC,EAAA;EACF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACZ,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI,CAACR,YAAY,EAAE;MAEnB,IAAI;QACA,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEX,YAAY,CAAC;QAC7CS,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACZ,UAAU,CAAC,CAAC;QAEzD,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;UACzEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAER;QACV,CAAC,CAAC;QAEF,IAAI,CAACK,QAAQ,CAACI,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QACjD;QAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClC,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC;QACrCb,aAAa,CAACc,GAAG,CAAC;MAEtB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD;IACJ,CAAC;IAEDhB,eAAe,CAAC,CAAC;;IAEjB;IACA,OAAO,MAAM;MACT,IAAIF,UAAU,EAAE;QACZgB,GAAG,CAACI,eAAe,CAACpB,UAAU,CAAC;MACnC;IACJ,CAAC;EACL,CAAC,EAAE,CAACN,YAAY,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE3D,oBACIN,OAAA;IAAK6B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAC7B,CAACtB,UAAU,gBACRR,OAAA;MAAK6B,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAChC9B,OAAA;QAAA8B,QAAA,EAAG;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,gBAENlC,OAAA;MAAKmC,GAAG,EAAE3B,UAAW;MAAC4B,GAAG,EAAC;IAAqB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACpD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC3B,EAAA,CAzDIN,kBAAkB;AAAAoC,EAAA,GAAlBpC,kBAAkB;AA2DxB,eAAeA,kBAAkB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}