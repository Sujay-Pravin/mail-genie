{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sujay\\\\OneDrive\\\\Desktop\\\\WEB-APPS\\\\vertex-mail-gen\\\\frontend\\\\src\\\\components\\\\CertificatePreview.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CertificatePreview = ({\n  templateFile,\n  previewName,\n  xCoord,\n  endXCoord,\n  yCoord,\n  fontSize,\n  showGuides = true\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    img.onload = () => {\n      // Set canvas size and draw image\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.drawImage(img, 0, 0);\n\n      // Calculate text metrics for centering\n      ctx.font = `${fontSize * 10}px Arial`;\n      const textMetrics = ctx.measureText(previewName);\n      const textHeight = fontSize * 15;\n      const textWidth = textMetrics.width;\n\n      // Calculate center position for text\n      const centerX = xCoord + (endXCoord - xCoord - textWidth) / 2;\n\n      // Display guides only in preview mode\n      if (showGuides) {\n        // Draw green box background\n        ctx.fillStyle = 'rgba(0, 200, 0, 0.2)';\n        ctx.strokeStyle = 'rgba(0, 200, 0, 0.8)';\n        ctx.lineWidth = 2;\n        ctx.fillRect(xCoord, yCoord - textHeight, endXCoord - xCoord, textHeight + 20);\n        ctx.strokeRect(xCoord, yCoord - textHeight, endXCoord - xCoord, textHeight + 20);\n\n        // Draw center guide line\n        ctx.beginPath();\n        ctx.strokeStyle = 'rgba(0, 200, 0, 0.5)';\n        ctx.setLineDash([5, 5]);\n        ctx.moveTo((xCoord + endXCoord) / 2, yCoord - textHeight - 10);\n        ctx.lineTo((xCoord + endXCoord) / 2, yCoord + 10);\n        ctx.stroke();\n      }\n\n      // Draw the centered text\n      ctx.fillStyle = 'black';\n      ctx.textBaseline = 'bottom';\n      ctx.fillText(previewName, centerX, yCoord);\n    };\n    img.src = URL.createObjectURL(templateFile);\n    return () => URL.revokeObjectURL(img.src);\n  }, [templateFile, previewName, xCoord, endXCoord, yCoord, fontSize, showGuides]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: \"certificate-preview\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n};\n_s(CertificatePreview, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = CertificatePreview;\nexport default CertificatePreview;\nvar _c;\n$RefreshReg$(_c, \"CertificatePreview\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","CertificatePreview","templateFile","previewName","xCoord","endXCoord","yCoord","fontSize","showGuides","_s","canvasRef","canvas","current","ctx","getContext","img","Image","onload","width","height","drawImage","font","textMetrics","measureText","textHeight","textWidth","centerX","fillStyle","strokeStyle","lineWidth","fillRect","strokeRect","beginPath","setLineDash","moveTo","lineTo","stroke","textBaseline","fillText","src","URL","createObjectURL","revokeObjectURL","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sujay/OneDrive/Desktop/WEB-APPS/vertex-mail-gen/frontend/src/components/CertificatePreview.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst CertificatePreview = ({ templateFile, previewName, xCoord, endXCoord, yCoord, fontSize, showGuides = true }) => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const img = new Image();\r\n\r\n    img.onload = () => {\r\n      // Set canvas size and draw image\r\n      canvas.width = img.width;\r\n      canvas.height = img.height;\r\n      ctx.drawImage(img, 0, 0);\r\n\r\n      // Calculate text metrics for centering\r\n      ctx.font = `${fontSize * 10}px Arial`;\r\n      const textMetrics = ctx.measureText(previewName);\r\n      const textHeight = fontSize * 15;\r\n      const textWidth = textMetrics.width;\r\n\r\n      // Calculate center position for text\r\n      const centerX = xCoord + ((endXCoord - xCoord) - textWidth) / 2;\r\n\r\n      // Display guides only in preview mode\r\n      if (showGuides) {\r\n        // Draw green box background\r\n        ctx.fillStyle = 'rgba(0, 200, 0, 0.2)';\r\n        ctx.strokeStyle = 'rgba(0, 200, 0, 0.8)';\r\n        ctx.lineWidth = 2;\r\n        ctx.fillRect(xCoord, yCoord - textHeight, endXCoord - xCoord, textHeight + 20);\r\n        ctx.strokeRect(xCoord, yCoord - textHeight, endXCoord - xCoord, textHeight + 20);\r\n\r\n        // Draw center guide line\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = 'rgba(0, 200, 0, 0.5)';\r\n        ctx.setLineDash([5, 5]);\r\n        ctx.moveTo((xCoord + endXCoord) / 2, yCoord - textHeight - 10);\r\n        ctx.lineTo((xCoord + endXCoord) / 2, yCoord + 10);\r\n        ctx.stroke();\r\n      }\r\n      \r\n      // Draw the centered text\r\n      ctx.fillStyle = 'black';\r\n      ctx.textBaseline = 'bottom';\r\n      ctx.fillText(previewName, centerX, yCoord);\r\n    };\r\n\r\n    img.src = URL.createObjectURL(templateFile);\r\n    return () => URL.revokeObjectURL(img.src);\r\n  }, [templateFile, previewName, xCoord, endXCoord, yCoord, fontSize, showGuides]);\r\n\r\n  return <canvas ref={canvasRef} className=\"certificate-preview\" />;\r\n};\r\n\r\nexport default CertificatePreview;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}