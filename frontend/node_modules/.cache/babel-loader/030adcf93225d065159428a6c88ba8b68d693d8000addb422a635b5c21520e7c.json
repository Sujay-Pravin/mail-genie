{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const CertificatePreview=_ref=>{let{templateFile,textFields,fontSize,font,textColor}=_ref;const[previewUrl,setPreviewUrl]=useState(null);useEffect(()=>{const generatePreview=async()=>{if(!templateFile)return;try{const formData=new FormData();formData.append('templateFile',templateFile);formData.append('textFields',JSON.stringify(textFields));const response=await fetch('http://localhost:5000/api/previewCertificate',{method:'POST',body:formData});if(!response.ok){throw new Error('Failed to generate preview');}const blob=await response.blob();const url=URL.createObjectURL(blob);setPreviewUrl(url);}catch(error){console.error('Preview generation failed:',error);}};generatePreview();// Cleanup function to prevent memory leaks\nreturn()=>{if(previewUrl){URL.revokeObjectURL(previewUrl);}};},[templateFile,textFields,fontSize,font,textColor]);// Removed previewUrl from dependencies\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"preview-container\",children:!previewUrl?/*#__PURE__*/_jsx(\"div\",{className:\"preview-placeholder\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Upload a template to see preview\"})}):/*#__PURE__*/_jsx(\"img\",{src:previewUrl,alt:\"Certificate Preview\"})});};export default CertificatePreview;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","CertificatePreview","_ref","templateFile","textFields","fontSize","font","textColor","previewUrl","setPreviewUrl","generatePreview","formData","FormData","append","JSON","stringify","response","fetch","method","body","ok","Error","blob","url","URL","createObjectURL","error","console","revokeObjectURL","className","children","src","alt"],"sources":["C:/Users/sujay/OneDrive/Desktop/vertex-mail-gen/frontend/src/components/CertificatePreview.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CertificatePreview = ({ \r\n    templateFile,\r\n    textFields,\r\n    fontSize,\r\n    font,\r\n    textColor\r\n}) => {\r\n    const [previewUrl, setPreviewUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const generatePreview = async () => {\r\n            if (!templateFile) return;\r\n\r\n            try {\r\n                const formData = new FormData();\r\n                formData.append('templateFile', templateFile);\r\n                formData.append('textFields', JSON.stringify(textFields));\r\n\r\n                const response = await fetch('http://localhost:5000/api/previewCertificate', {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to generate preview');\r\n                }\r\n\r\n                const blob = await response.blob();\r\n                const url = URL.createObjectURL(blob);\r\n                setPreviewUrl(url);\r\n\r\n            } catch (error) {\r\n                console.error('Preview generation failed:', error);\r\n            }\r\n        };\r\n\r\n        generatePreview();\r\n\r\n        // Cleanup function to prevent memory leaks\r\n        return () => {\r\n            if (previewUrl) {\r\n                URL.revokeObjectURL(previewUrl);\r\n            }\r\n        };\r\n    }, [templateFile, textFields, fontSize, font, textColor]); // Removed previewUrl from dependencies\r\n\r\n    return (\r\n        <div className=\"preview-container\">\r\n            {!previewUrl ? (\r\n                <div className=\"preview-placeholder\">\r\n                    <p>Upload a template to see preview</p>\r\n                </div>\r\n            ) : (\r\n                <img src={previewUrl} alt=\"Certificate Preview\" />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CertificatePreview;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnD,KAAM,CAAAC,kBAAkB,CAAGC,IAAA,EAMrB,IANsB,CACxBC,YAAY,CACZC,UAAU,CACVC,QAAQ,CACRC,IAAI,CACJC,SACJ,CAAC,CAAAL,IAAA,CACG,KAAM,CAACM,UAAU,CAAEC,aAAa,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAElDC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAY,eAAe,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CAACP,YAAY,CAAE,OAEnB,GAAI,CACA,KAAM,CAAAQ,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,cAAc,CAAEV,YAAY,CAAC,CAC7CQ,QAAQ,CAACE,MAAM,CAAC,YAAY,CAAEC,IAAI,CAACC,SAAS,CAACX,UAAU,CAAC,CAAC,CAEzD,KAAM,CAAAY,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,8CAA8C,CAAE,CACzEC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAER,QACV,CAAC,CAAC,CAEF,GAAI,CAACK,QAAQ,CAACI,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,4BAA4B,CAAC,CACjD,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClC,KAAM,CAAAC,GAAG,CAAGC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC,CACrCb,aAAa,CAACc,GAAG,CAAC,CAEtB,CAAE,MAAOG,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CACtD,CACJ,CAAC,CAEDhB,eAAe,CAAC,CAAC,CAEjB;AACA,MAAO,IAAM,CACT,GAAIF,UAAU,CAAE,CACZgB,GAAG,CAACI,eAAe,CAACpB,UAAU,CAAC,CACnC,CACJ,CAAC,CACL,CAAC,CAAE,CAACL,YAAY,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,IAAI,CAAEC,SAAS,CAAC,CAAC,CAAE;AAE3D,mBACIP,IAAA,QAAK6B,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAC7B,CAACtB,UAAU,cACRR,IAAA,QAAK6B,SAAS,CAAC,qBAAqB,CAAAC,QAAA,cAChC9B,IAAA,MAAA8B,QAAA,CAAG,kCAAgC,CAAG,CAAC,CACtC,CAAC,cAEN9B,IAAA,QAAK+B,GAAG,CAAEvB,UAAW,CAACwB,GAAG,CAAC,qBAAqB,CAAE,CACpD,CACA,CAAC,CAEd,CAAC,CAED,cAAe,CAAA/B,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}